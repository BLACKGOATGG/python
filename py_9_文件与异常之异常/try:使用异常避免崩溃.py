# ===========================================================
print('\n使用异常避免崩溃')
# 发生错误时，如果程序还有工作没有完成，妥善地处理错误就尤其重要。
# 这种情况经常会出现在要求用户提供输入的程序中;
# 如果程序能够妥善地处理无效输入，就能再提示用户提供有效输入，而不至于崩溃。

print("输入两个数字，获得他们的商")
print("输入q退出")
while False:
# while True:
    first_number = input("第一个数字")
    if first_number == 'q':
        break
    second_number = input("第二个数字")
    if second_number == 'q':
        break
    answer = int(first_number) / int(second_number)

    print('结果是：' , answer )

# 这个程序没有采取任何处理错误的措施，因此让它执行除数为0的除法运算时，它将崩溃:
# 程序崩溃可不好，但让用户看到traceback也不是好主意。
# 不懂技术的用户会被它们搞糊涂，而且如果用户怀有恶意，他会通过traceback获悉你不希望他知道的信息。
    # 例如，他将知道你的程序文件的名称，还将看到部分不能正确运行的代码。
    # 有时候，训练有素的攻击者可根据这些信息判断出可对你的代码发起什么样的攻击。


