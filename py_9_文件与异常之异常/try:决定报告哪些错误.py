# ===========================================================
print('\n决定报告哪些错误')
# 在什么情况下该向用户报告错误?在什么情况下又应该在失败时一声不吭呢?
    # 如果用户知道要分析哪些文件，他们可能希望在有文件没有分析时出现一条消息，将其中的原因告诉他们。
    # 如果用户只想看到结果，而并不知道要分析哪些文件，可能就无需在有些文件不存在时告知他们。
    # 向用户显示他不想看到的信息可能会降低程序的可用性。
    # Python的错误处理结构让你能够细致地控制与用户分享错误信息的程度，要分享多少信息由你决定。

# 编写得很好且经过详尽测试的代码不容易出现内部错误，如语法或逻辑错误
# 但只要程序依赖于外部因素，如用户输入、存在指定的文件、有网络链接，就有可能出现异常。
# 凭借经验可判断该在程序的什么地方包含异常处理块，以及出现错误时该向用户提供多少相关的信息。



